//Raymond@HZHL3 ~/code/go/src/github.com/rhu1/scribble-go-runtime
//$ ~/code/eclipse/scribble/github.com/rhu1-go/scribble-java/bin/scribblec-param.sh test/mesh/mesh02/Mesh2.scr -d test/mesh/mesh02/ -param Proto3 github.com/rhu1/scribble-go-runtime/test/mesh/mesh02/Mesh2 -param-api W


module Mesh2;


type <go> "string" from "..." as string;

// Families: x = 2, or x > 2 -- y doesn't matter
global protocol Proto1(role W)
{
	foreach W[I1:(1,1),Khw-(1,0)], W[I2:(2,1),Khw]
	{
		Foo(string) from W[I1] to W[I2];
	}
}

global protocol Proto2(role W)
{
	/*foreach W[I1:Kh1,Khw], W[I2:(1,1),Kh1]
	{
		Foo(string) from W[I1] to W[I2];
	}*/
	/*foreach W[I1:Kh1,Khw], W[I2:Kh1-(0,1),Khw-(0,1)]
	{
		Foo(string) from W[I1] to W[I2];
	}*/
	// product order vs "alpha" order
	// K1w = (1, w) // K1 <= (2,1)   // (2,1) <= (1,2) -- product:false, alpha(rt): true
	foreach W[I1:(1,1),K1w], W[I2:(1,1)+Kh1,K1w+Kh1]
	{
		Foo(string) from W[I1] to W[I2];
	}
}

// Families: y = 2, or y > 2 -- x doesn't matter
global protocol Proto3(role W)
{
	foreach W[I1:(1,1),K1w-(0,1)], W[I2:(1,2),K1w]
	{
		Foo(string) from W[I1] to W[I2];
	}
}

